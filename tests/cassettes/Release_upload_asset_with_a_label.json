{"http_interactions": [{"recorded_at": "2015-11-19T04:51:33", "request": {"body": {"encoding": "utf-8", "string": ""}, "uri": "https://api.github.com/repos/github3py/github3.py", "headers": {"User-Agent": "github3.py/1.0.0a2", "Accept-Charset": "utf-8", "Content-Type": "application/json", "Accept": "application/vnd.github.v3.full+json", "Authorization": "token <AUTH_TOKEN>", "Connection": "keep-alive", "Accept-Encoding": "gzip, deflate"}, "method": "GET"}, "response": {"body": {"encoding": "utf-8", "base64_string": "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", "string": ""}, "status": {"message": "OK", "code": 200}, "headers": {"Access-Control-Allow-Origin": "*", "X-Frame-Options": "deny", "Content-Type": "application/json; charset=utf-8", "X-Served-By": "318e55760cf7cdb40e61175a4d36cd32", "Content-Security-Policy": "default-src 'none'", "X-RateLimit-Remaining": "4991", "X-RateLimit-Reset": "1447911450", "Transfer-Encoding": "chunked", "Content-Encoding": "gzip", "X-Content-Type-Options": "nosniff", "X-OAuth-Scopes": "gist, repo, user", "Cache-Control": "private, max-age=60, s-maxage=60", "ETag": "W/\"88a452aa7f992481a8bcef78417d4adf\"", "X-GitHub-Media-Type": "github.v3; param=full; format=json", "Strict-Transport-Security": "max-age=31536000; includeSubdomains; preload", "Status": "200 OK", "X-XSS-Protection": "1; mode=block", "X-RateLimit-Limit": "5000", "Vary": "Accept, Authorization, Cookie, X-GitHub-OTP", "Access-Control-Allow-Credentials": "true", "Last-Modified": "Fri, 17 Jul 2015 15:54:22 GMT", "X-Accepted-OAuth-Scopes": "repo", "Date": "Thu, 19 Nov 2015 04:51:33 GMT", "Server": "GitHub.com", "X-GitHub-Request-Id": "48A0C9E9:146C9:2406B0DE:564D5555", "Access-Control-Expose-Headers": "ETag, Link, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval"}, "url": "https://api.github.com/repos/github3py/github3.py"}}, {"recorded_at": "2015-11-19T04:51:34", "request": {"body": {"encoding": "utf-8", "string": "{\"body\": \"To be deleted\", \"target_commitish\": \"develop\", \"draft\": false, \"tag_name\": \"0.8.0.pre\", \"prerelease\": false, \"name\": \"0.8.0.pre fake release with upload\"}"}, "uri": "https://api.github.com/repos/github3py/github3.py/releases", "headers": {"User-Agent": "github3.py/1.0.0a2", "Content-Length": "164", "Accept-Charset": "utf-8", "Connection": "keep-alive", "Accept": "application/vnd.github.manifold-preview", "Authorization": "token <AUTH_TOKEN>", "Content-Type": "application/json", "Accept-Encoding": "gzip, deflate"}, "method": "POST"}, "response": {"body": {"encoding": "utf-8", "string": "{\"url\":\"https://api.github.com/repos/github3py/github3.py/releases/2150872\",\"assets_url\":\"https://api.github.com/repos/github3py/github3.py/releases/2150872/assets\",\"upload_url\":\"https://uploads.github.com/repos/github3py/github3.py/releases/2150872/assets{?name,label}\",\"html_url\":\"https://github.com/github3py/github3.py/releases/tag/0.8.0.pre\",\"id\":2150872,\"tag_name\":\"0.8.0.pre\",\"target_commitish\":\"develop\",\"name\":\"0.8.0.pre fake release with upload\",\"draft\":false,\"author\":{\"login\":\"sigmavirus24\",\"id\":240830,\"avatar_url\":\"https://avatars.githubusercontent.com/u/240830?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/sigmavirus24\",\"html_url\":\"https://github.com/sigmavirus24\",\"followers_url\":\"https://api.github.com/users/sigmavirus24/followers\",\"following_url\":\"https://api.github.com/users/sigmavirus24/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/sigmavirus24/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/sigmavirus24/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/sigmavirus24/subscriptions\",\"organizations_url\":\"https://api.github.com/users/sigmavirus24/orgs\",\"repos_url\":\"https://api.github.com/users/sigmavirus24/repos\",\"events_url\":\"https://api.github.com/users/sigmavirus24/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/sigmavirus24/received_events\",\"type\":\"User\",\"site_admin\":false},\"prerelease\":false,\"created_at\":\"2013-11-15T02:59:20Z\",\"published_at\":\"2015-11-19T04:51:34Z\",\"assets\":[],\"tarball_url\":\"https://api.github.com/repos/github3py/github3.py/tarball/0.8.0.pre\",\"zipball_url\":\"https://api.github.com/repos/github3py/github3.py/zipball/0.8.0.pre\",\"body\":\"To be deleted\"}"}, "status": {"message": "Created", "code": 201}, "headers": {"Access-Control-Allow-Origin": "*", "X-Frame-Options": "deny", "Content-Type": "application/json; charset=utf-8", "X-Served-By": "4c8b2d4732c413f4b9aefe394bd65569", "Content-Security-Policy": "default-src 'none'", "X-RateLimit-Reset": "1447911450", "X-RateLimit-Remaining": "4990", "Location": "https://api.github.com/repos/github3py/github3.py/releases/2150872", "X-GitHub-Media-Type": "github.v3; param=manifold-preview", "Access-Control-Expose-Headers": "ETag, Link, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval", "X-Content-Type-Options": "nosniff", "X-OAuth-Scopes": "gist, repo, user", "Cache-Control": "private, max-age=60, s-maxage=60", "ETag": "\"ddd68fb53d568065edbf1fafe71afeae\"", "Content-Length": "1694", "Strict-Transport-Security": "max-age=31536000; includeSubdomains; preload", "Status": "201 Created", "X-XSS-Protection": "1; mode=block", "X-RateLimit-Limit": "5000", "Vary": "Accept, Authorization, Cookie, X-GitHub-OTP", "Access-Control-Allow-Credentials": "true", "X-Accepted-OAuth-Scopes": "", "Date": "Thu, 19 Nov 2015 04:51:34 GMT", "Server": "GitHub.com", "X-GitHub-Request-Id": "48A0C9E9:146C9:2406B10B:564D5555"}, "url": "https://api.github.com/repos/github3py/github3.py/releases"}}, {"recorded_at": "2015-11-19T04:51:35", "request": {"body": {"encoding": "utf-8", "string": "import github3\nimport os\nimport tempfile\n\nfrom .helper import IntegrationHelper\n\n\nclass TestRelease(IntegrationHelper):\n    def test_archive(self):\n        \"\"\"Test the ability to download a release archive.\"\"\"\n        cassette_name = self.cassette_name('archive')\n        with self.recorder.use_cassette(cassette_name,\n                                        preserve_exact_body_bytes=True):\n            repository = self.gh.repository('sigmavirus24', 'github3.py')\n            release = repository.release(76677)\n            _, filename = tempfile.mkstemp()\n            release.archive('tarball', path=filename)\n\n        with open(filename, 'rb') as fd:\n            assert len(fd.read(1024)) > 0\n\n        os.unlink(filename)\n\n    def test_asset(self):\n        \"\"\"Test the ability to retrieve a single asset from a release.\"\"\"\n        cassette_name = self.cassette_name('asset')\n        with self.recorder.use_cassette(cassette_name):\n            repository = self.gh.repository('sigmavirus24', 'github3.py')\n            release = repository.release(76677)\n            asset = release.asset(37944)\n\n        assert asset is not None\n        assert isinstance(asset, github3.repos.release.Asset)\n\n    def test_assets(self):\n        \"\"\"Test the ability to iterate over the assets of a release.\"\"\"\n        cassette_name = self.cassette_name('assets')\n        with self.recorder.use_cassette(cassette_name):\n            repository = self.gh.repository('sigmavirus24', 'github3.py')\n            release = repository.release(76677)\n            for asset in release.assets():\n                assert isinstance(asset, github3.repos.release.Asset)\n            assert asset is not None\n\n    def test_delete(self):\n        \"\"\"Test the ability to delete a release.\"\"\"\n        self.token_login()\n        cassette_name = self.cassette_name('delete')\n        with self.recorder.use_cassette(cassette_name):\n            repository = self.gh.repository('github3py', 'github3.py')\n            release = repository.create_release(\n                '0.8.0.pre', 'develop', '0.8.0 fake release',\n                'To be deleted'\n                )\n            assert release is not None\n            assert release.delete() is True\n\n    def test_edit(self):\n        \"\"\"Test the ability to edit a release on a repository.\"\"\"\n        self.token_login()\n        cassette_name = self.cassette_name('edit')\n        with self.recorder.use_cassette(cassette_name):\n            repository = self.gh.repository('sigmavirus24', 'charade')\n            release = repository.release(85783)\n            assert release.edit(body='Test editing a release') is True\n            assert release.body == 'Test editing a release'\n\n    def test_upload_asset(self):\n        \"\"\"Test the ability to upload an asset to a release.\"\"\"\n        self.token_login()\n        cassette_name = self.cassette_name('upload_asset')\n        with self.recorder.use_cassette(cassette_name):\n            repository = self.gh.repository('github3py', 'github3.py')\n            release = repository.create_release(\n                '0.8.0.pre', 'develop', '0.8.0 fake release with upload',\n                'To be deleted'\n                )\n            with open(__file__) as fd:\n                asset = release.upload_asset(\n                    'text/plain', 'test_repos_release.py', fd.read(),\n                )\n            assert isinstance(asset, github3.repos.release.Asset)\n            release.delete()\n\n    def test_upload_asset_with_a_label(self):\n        \"\"\"Test the ability to upload an asset to a release with a label.\"\"\"\n        self.token_login()\n        cassette_name = self.cassette_name('upload_asset_with_a_label')\n        with self.recorder.use_cassette(cassette_name):\n            repository = self.gh.repository('github3py', 'github3.py')\n            release = repository.create_release(\n                '0.8.0.pre', 'develop', '0.8.0.pre fake release with upload',\n                'To be deleted'\n                )\n            with open(__file__) as fd:\n                asset = release.upload_asset(\n                    'text/plain', 'test_repos_release.py', fd.read(),\n                    'test-label',\n                )\n            release.delete()\n        assert isinstance(asset, github3.repos.release.Asset)\n\n\nclass TestAsset(IntegrationHelper):\n    def test_delete(self):\n        \"\"\"Test the ability to delete an asset.\"\"\"\n        self.basic_login()\n        cassette_name = self.cassette_name('delete')\n        with self.recorder.use_cassette(cassette_name):\n            repository = self.gh.repository('github3py', 'github3.py')\n            release = repository.release(833407)\n            asset = release.asset(370020)\n            assert asset.delete() is True\n\n    def test_download(self):\n        \"\"\"Test the ability to download an asset.\"\"\"\n        cassette_name = self.cassette_name('download')\n        with self.recorder.use_cassette(cassette_name,\n                                        preserve_exact_body_bytes=True):\n            repository = self.gh.repository('sigmavirus24', 'github3.py')\n            release = repository.release(76677)\n            asset = next(release.assets())\n            _, filename = tempfile.mkstemp()\n            asset.download(filename)\n\n        with open(filename, 'rb') as fd:\n            assert len(fd.read(1024)) > 0\n\n        os.unlink(filename)\n\n    def test_download_when_authenticated(self):\n        \"\"\"Test the ability to download an asset when authenticated.\"\"\"\n        self.basic_login()\n        cassette_name = self.cassette_name('download_when_authenticated')\n        with self.recorder.use_cassette(cassette_name,\n                                        preserve_exact_body_bytes=True):\n            repository = self.gh.repository('sigmavirus24', 'github3.py')\n            release = repository.release(76677)\n            asset = next(release.assets())\n            _, filename = tempfile.mkstemp()\n            assert asset.session.auth is not None\n            asset.download(filename)\n            assert asset.session.auth is not None\n\n        with open(filename, 'rb') as fd:\n            assert len(fd.read(1024)) > 0\n\n        os.unlink(filename)\n\n    def test_edit(self):\n        \"\"\"Test the ability to edit an existing asset.\"\"\"\n        self.basic_login()\n        cassette_name = self.cassette_name('edit')\n        with self.recorder.use_cassette(cassette_name,\n                                        preserve_exact_body_bytes=True):\n            repository = self.gh.repository('github3py', 'github3.py')\n            release = repository.create_release(\n                '0.8.0.pre', 'develop', '0.8.0 fake release with upload',\n                'To be deleted'\n                )\n            with open(__file__) as fd:\n                asset = release.upload_asset(\n                    'text/plain', 'test_repos_release.py', fd.read()\n                    )\n            assert isinstance(asset, github3.repos.release.Asset)\n            assert asset.edit('A new name for this asset') is True\n            release.delete()\n"}, "uri": "https://uploads.github.com/repos/github3py/github3.py/releases/2150872/assets?name=test_repos_release.py&label=test-label", "headers": {"User-Agent": "github3.py/1.0.0a2", "Content-Length": "7023", "Accept-Charset": "utf-8", "Connection": "keep-alive", "Accept": "application/vnd.github.v3.full+json", "Authorization": "token <AUTH_TOKEN>", "Content-Type": "application/json", "Accept-Encoding": "gzip, deflate"}, "method": "POST"}, "response": {"body": {"encoding": "utf-8", "string": "{\"url\":\"https://api.github.com/repos/github3py/github3.py/releases/assets/1049500\",\"id\":1049500,\"name\":\"test_repos_release.py\",\"label\":\"test-label\",\"uploader\":{\"login\":\"sigmavirus24\",\"id\":240830,\"avatar_url\":\"https://avatars.githubusercontent.com/u/240830?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/sigmavirus24\",\"html_url\":\"https://github.com/sigmavirus24\",\"followers_url\":\"https://api.github.com/users/sigmavirus24/followers\",\"following_url\":\"https://api.github.com/users/sigmavirus24/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/sigmavirus24/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/sigmavirus24/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/sigmavirus24/subscriptions\",\"organizations_url\":\"https://api.github.com/users/sigmavirus24/orgs\",\"repos_url\":\"https://api.github.com/users/sigmavirus24/repos\",\"events_url\":\"https://api.github.com/users/sigmavirus24/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/sigmavirus24/received_events\",\"type\":\"User\",\"site_admin\":false},\"content_type\":\"application/json\",\"state\":\"uploaded\",\"size\":7023,\"download_count\":0,\"created_at\":\"2015-11-19T04:51:34Z\",\"updated_at\":\"2015-11-19T04:51:35Z\",\"browser_download_url\":\"https://github.com/github3py/github3.py/releases/download/0.8.0.pre/test_repos_release.py\"}"}, "status": {"message": "Created", "code": 201}, "headers": {"X-Xss-Protection": "1; mode=block", "Transfer-Encoding": "chunked", "Content-Type": "application/json; charset=utf-8", "Content-Security-Policy": "default-src 'none'", "Etag": "W/\"e64e9f5c965a211c7189340dd3fa6650\"", "Date": "Thu, 19 Nov 2015 04:51:35 GMT", "X-GitHub-Request-Id": "48A0C9E9:5929:34881B76:564D5556", "X-Oauth-Scopes": "gist, repo, user", "Vary": "Accept, Authorization, Cookie, X-GitHub-OTP", "Strict-Transport-Security": "max-age=31557600", "Last-Modified": "Thu, 19 Nov 2015 04:51:35 GMT", "X-Github-Media-Type": "github.v3; param=full; format=json", "X-Content-Type-Options": "nosniff", "X-Frame-Options": "deny", "Cache-Control": "no-cache"}, "url": "https://uploads.github.com/repos/github3py/github3.py/releases/2150872/assets?name=test_repos_release.py&label=test-label"}}, {"recorded_at": "2015-11-19T04:51:35", "request": {"body": {"encoding": "utf-8", "string": ""}, "uri": "https://api.github.com/repos/github3py/github3.py/releases/2150872", "headers": {"User-Agent": "github3.py/1.0.0a2", "Content-Length": "0", "Accept-Charset": "utf-8", "Connection": "keep-alive", "Accept": "application/vnd.github.manifold-preview", "Authorization": "token <AUTH_TOKEN>", "Content-Type": "application/json", "Accept-Encoding": "gzip, deflate"}, "method": "DELETE"}, "response": {"body": {"encoding": null, "string": ""}, "status": {"message": "No Content", "code": 204}, "headers": {"Access-Control-Allow-Origin": "*", "X-GitHub-Media-Type": "github.v3; param=manifold-preview", "Strict-Transport-Security": "max-age=31536000; includeSubdomains; preload", "X-Served-By": "5aeb3f30c9e3ef6ef7bcbcddfd9a68f7", "Content-Security-Policy": "default-src 'none'", "Status": "204 No Content", "X-RateLimit-Remaining": "4987", "X-RateLimit-Reset": "1447911450", "Vary": "Accept-Encoding", "X-XSS-Protection": "1; mode=block", "X-RateLimit-Limit": "5000", "X-Frame-Options": "deny", "Access-Control-Allow-Credentials": "true", "X-Accepted-OAuth-Scopes": "", "Date": "Thu, 19 Nov 2015 04:51:35 GMT", "X-Content-Type-Options": "nosniff", "X-OAuth-Scopes": "gist, repo, user", "Server": "GitHub.com", "X-GitHub-Request-Id": "48A0C9E9:146C9:2406B133:564D5556", "Access-Control-Expose-Headers": "ETag, Link, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval"}, "url": "https://api.github.com/repos/github3py/github3.py/releases/2150872"}}], "recorded_with": "betamax/0.5.1"}